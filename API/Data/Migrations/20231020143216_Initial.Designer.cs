// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231020143216_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnownAs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Martinique",
                            Created = new DateTime(2020, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1956, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Interests = "Sit sit incididunt proident velit.",
                            KnownAs = "Lisa",
                            LastActive = new DateTime(2020, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = new byte[] { 170, 135, 254, 6, 231, 151, 92, 156, 249, 69, 12, 11, 55, 153, 225, 245, 49, 185, 38, 142, 16, 92, 17, 68, 211, 242, 18, 224, 198, 76, 117, 205, 230, 3, 150, 4, 239, 169, 49, 170, 235, 125, 146, 116, 56, 214, 108, 245, 79, 68, 234, 139, 29, 30, 32, 240, 145, 82, 144, 224, 42, 153, 224, 4 },
                            PasswordSalt = new byte[] { 201, 231, 132, 167, 137, 153, 232, 159, 205, 242, 146, 232, 77, 174, 166, 123, 86, 57, 147, 253, 218, 247, 129, 1, 45, 231, 148, 154, 192, 211, 37, 52, 149, 77, 220, 43, 134, 116, 64, 199, 215, 78, 226, 121, 87, 19, 75, 163, 163, 209, 86, 55, 224, 195, 108, 222, 190, 73, 115, 71, 91, 94, 18, 87, 87, 193, 36, 239, 241, 195, 32, 156, 237, 56, 114, 238, 184, 160, 13, 94, 129, 130, 181, 38, 61, 172, 140, 17, 96, 230, 210, 178, 70, 180, 13, 233, 120, 47, 216, 247, 82, 174, 26, 27, 37, 52, 124, 126, 195, 114, 69, 26, 73, 187, 62, 150, 46, 62, 208, 248, 175, 231, 114, 147, 173, 176, 174, 66 },
                            UserName = "Lisa"
                        });
                });

            modelBuilder.Entity("API.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            IsMain = true,
                            PublicId = "PublicId1",
                            Url = "https://randomuser.me/api/portraits/women/54.jpg"
                        });
                });

            modelBuilder.Entity("API.Entities.Photo", b =>
                {
                    b.HasOne("API.Entities.AppUser", "AppUser")
                        .WithMany("Photos")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
